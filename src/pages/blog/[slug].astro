---
import Layout from "../../layouts/Layout.astro";
import { getCollection, getEntryBySlug } from "astro:content";
import { format } from "timeago.js";

export async function getStaticPaths() {
  return (await getCollection("posts")).map((post) => ({
    params: { slug: `${post.data.unlisted ? 'draft-' : ''}${post.slug}` },
  }));
}

const { slug } = Astro.params;

const post = await getEntryBySlug("posts", slug.replace('draft-', ''));
const { Content } = await post.render();
---

<Layout title={`${post.data.title} â€” Omran Jamal`}>
  <article itemscope itemtype="http://schema.org/Article">
    <time itemprop="dateModified" datetime={post.data.edited.toISOString()} title={post.data.edited} class="block mt-24 text-lg uppercase pl-6 mb-2 font-semibold text-gray-400">
      {format(post.data.edited, "en_US")}
    </time>
  
    <h1 class="px-4 text-6xl font-black max-w-[85%] mb-6" itemprop="headline">
      {post.data.title}
    </h1>
  
    <main class="flex flex-col mx-4">
      <aside class="w-full flex flex-row mb-6">
        <div itemprop="author publisher" itemscope itemtype="http://schema.org/Person">
          <div class="uppercase text-gray-500 font-jetbrains-mono mb-1 text-sm">
            Author
          </div>
          <div class="flex flex-row items-center flex-1">
            <img
              class="w-12 border-4 border-blue-100 h-12 rounded-full"
              src="https://avatars.githubusercontent.com/u/4700757?v=4"
              alt="Omran Jamal"
              itemprop="image"
            />
            <div class="font-semibold mx-2" itemprop="name">
              <span itemprop="givenName">Omran</span> <span itemprop="familyName">Jamal</span>
            </div>
          </div>
        </div>
      </aside>

      <section class="w-full text-lg lg:w-3/4 font-inter">
        <div class="post" itemprop="articleBody">
          <Content />
        </div>
      </section>
    </main>
  
    <div class="text-lg pl-6 font-semibold text-gray-400 space-x-4 mt-12 mb-6">
      {
        post.data.tags.map((tag) => (
          <a href="#" class="text-gray-400">
            #{tag}
          </a>
        ))
      }
    </div>
  </article>
</Layout>
